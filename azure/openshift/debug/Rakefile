
required_vars = %w[
  ARM_CLIENT_ID
  ARM_CLIENT_SECRET
  ARM_SUBSCRIPTION_ID
  ARM_TENANT_ID
]

WORKSPACE=`terraform workspace show`.strip


task :verify do
  ENV['TF_VAR_vault_password'] = ENV['VAULT_PASSWORD']
  ENV['TF_VAR_vault_username'] = ENV['VAULT_USERNAME']
  ENV['TF_VAR_account'] = 'indico-dev-azure'
  ENV['TF_VAR_label'] = 'os8'
   ENV['TF_VAR_resource_group_name'] = 'os8-eastus'
  ENV['TF_VAR_argo_enabled'] = 'false'
  ENV['TF_VAR_ipa_smoketest_enabled'] = 'false'

  required_vars.each do |evar|
    raise "Missing required environment variable #{evar}" unless ENV[evar]
    raise "Empty environment variable #{evar} not allowed" if ENV[evar].empty?
  end
end

task secrets: :verify do
end

task init: :verify do
  sh %( terraform init )
end

task plan: :secrets do
  sh %( terraform plan  )
end


task apply: :secrets do
  sh %( terraform apply -auto-approve  )
end


task info: :verify do
  #sh %( az aro show --name openshift-cluster-#{WORKSPACE} --resource-group openshift-cluster-#{WORKSPACE} )
  sh %( az aro show --name openshift-cluster-#{WORKSPACE} --resource-group openshift-cluster-#{WORKSPACE} --query '{api:apiserverProfile.ip, ingress:ingressProfiles[0].ip, consoleUrl:consoleProfile.url, apiUrl:apiserverProfile.url}' )
  sh %( az aro list-credentials --name openshift-cluster-#{WORKSPACE} --resource-group openshift-cluster-#{WORKSPACE} )

end
