resource "kubernetes_config_map" "terraform-variables" {
  depends_on = [null_resource.sleep-5-minutes]
  metadata {
    name = "terraform-variables"
  }
  data = {
    is_azure = "${tostring(var.is_azure})"
    is_aws = "${tostring(var.is_aws})"
    label = "${tostring(var.label})"
    message = "${tostring(var.message})"
    harbor_pull_secret_b64 = "${tostring(var.harbor_pull_secret_b64})"
    applications = "${tostring(var.applications})"
    region = "${tostring(var.region})"
    aws_access_key = "${tostring(var.aws_access_key})"
    aws_secret_key = "${tostring(var.aws_secret_key})"
    direct_connect = "${tostring(var.direct_connect})"
    additional_tags = "${tostring(var.additional_tags})"
    default_tags = "${tostring(var.default_tags})"
    vpc_cidr = "${tostring(var.vpc_cidr})"
    public_ip = "${tostring(var.public_ip})"
    vpc_name = "${tostring(var.vpc_name})"
    private_subnet_cidrs = "${tostring(var.private_subnet_cidrs})"
    public_subnet_cidrs = "${tostring(var.public_subnet_cidrs})"
    subnet_az_zones = "${tostring(var.subnet_az_zones})"
    storage_gateway_size = "${tostring(var.storage_gateway_size})"
    existing_kms_key = "${tostring(var.existing_kms_key})"
    bucket_versioning = "${tostring(var.bucket_versioning})"
    submission_expiry = "${tostring(var.submission_expiry})"
    uploads_expiry = "${tostring(var.uploads_expiry})"
    name = "${tostring(var.name})"
    cluster_name = "${tostring(var.cluster_name})"
    k8s_version = "${tostring(var.k8s_version})"
    node_groups = "${tostring(var.node_groups})"
    node_bootstrap_arguments = "${tostring(var.node_bootstrap_arguments})"
    node_user_data = "${tostring(var.node_user_data})"
    node_disk_size = "${tostring(var.node_disk_size})"
    cluster_node_policies = "${tostring(var.cluster_node_policies})"
    kms_encrypt_secrets = "${tostring(var.kms_encrypt_secrets})"
    enable_readapi = "${tostring(var.enable_readapi})"
    azure_indico_io_client_id = "${tostring(var.azure_indico_io_client_id})"
    azure_indico_io_client_secret = "${tostring(var.azure_indico_io_client_secret})"
    azure_indico_io_subscription_id = "${tostring(var.azure_indico_io_subscription_id})"
    azure_indico_io_tenant_id = "${tostring(var.azure_indico_io_tenant_id})"
    eks_cluster_iam_role = "${tostring(var.eks_cluster_iam_role})"
    eks_cluster_nodes_iam_role = "${tostring(var.eks_cluster_nodes_iam_role})"
    storage_capacity = "${tostring(var.storage_capacity})"
    deletion_protection_enabled = "${tostring(var.deletion_protection_enabled})"
    skip_final_snapshot = "${tostring(var.skip_final_snapshot})"
    per_unit_storage_throughput = "${tostring(var.per_unit_storage_throughput})"
    az_count = "${tostring(var.az_count})"
    snapshot_id = "${tostring(var.snapshot_id})"
    include_rox = "${tostring(var.include_rox})"
    aws_account = "${tostring(var.aws_account})"
    argo_host = "${tostring(var.argo_host})"
    argo_username = "${tostring(var.argo_username})"
    argo_password = "${tostring(var.argo_password})"
    argo_repo = "${tostring(var.argo_repo})"
    argo_branch = "${tostring(var.argo_branch})"
    argo_namespace = "${tostring(var.argo_namespace})"
    argo_path = "${tostring(var.argo_path})"
    argo_github_team_owner = "${tostring(var.argo_github_team_owner})"
    ipa_repo = "${tostring(var.ipa_repo})"
    ipa_version = "${tostring(var.ipa_version})"
    ipa_smoketest_values = "${tostring(var.ipa_smoketest_values})"
    ipa_smoketest_repo = "${tostring(var.ipa_smoketest_repo})"
    ipa_smoketest_version = "${tostring(var.ipa_smoketest_version})"
    ipa_smoketest_enabled = "${tostring(var.ipa_smoketest_enabled})"
    monitoring_version = "${tostring(var.monitoring_version})"
    ipa_pre_reqs_version = "${tostring(var.ipa_pre_reqs_version})"
    ipa_crds_version = "${tostring(var.ipa_crds_version})"
    ipa_enabled = "${tostring(var.ipa_enabled})"
    ipa_values = "${tostring(var.ipa_values})"
    git_pat = "${tostring(var.git_pat})"
    vault_address = "${tostring(var.vault_address})"
    vault_username = "${tostring(var.vault_username})"
    vault_password = "${tostring(var.vault_password})"
    sqs_sns = "${tostring(var.sqs_sns})"
    restore_snapshot_enabled = "${tostring(var.restore_snapshot_enabled})"
    restore_snapshot_name = "${tostring(var.restore_snapshot_name})"
    oidc_enabled = "${tostring(var.oidc_enabled})"
    oidc_client_id = "${tostring(var.oidc_client_id})"
    oidc_config_name = "${tostring(var.oidc_config_name})"
    oidc_issuer_url = "${tostring(var.oidc_issuer_url})"
    oidc_groups_prefix = "${tostring(var.oidc_groups_prefix})"
    oidc_groups_claim = "${tostring(var.oidc_groups_claim})"
    oidc_username_prefix = "${tostring(var.oidc_username_prefix})"
    oidc_username_claim = "${tostring(var.oidc_username_claim})"
    monitoring_enabled = "${tostring(var.monitoring_enabled})"
    hibernation_enabled = "${tostring(var.hibernation_enabled})"
    keda_version = "${tostring(var.keda_version})"
    opentelemetry-collector_version = "${tostring(var.opentelemetry-collector_version})"
    include_fsx = "${tostring(var.include_fsx})"
    include_pgbackup = "${tostring(var.include_pgbackup})"
    include_efs = "${tostring(var.include_efs})"
    performance_bucket = "${tostring(var.performance_bucket})"
    crds-values-yaml-b64 = "${tostring(var.crds-values-yaml-b64})"
    pre-reqs-values-yaml-b64 = "${tostring(var.pre-reqs-values-yaml-b64})"
    k8s_dashboard_chart_version = "${tostring(var.k8s_dashboard_chart_version})"
    enable_k8s_dashboard = "${tostring(var.enable_k8s_dashboard})"
    use_acm = "${tostring(var.use_acm})"
    terraform_vault_mount_path = "${tostring(var.terraform_vault_mount_path})"
    snowflake_region = "${tostring(var.snowflake_region})"
    snowflake_username = "${tostring(var.snowflake_username})"
    snowflake_account = "${tostring(var.snowflake_account})"
    snowflake_private_key = "${tostring(var.snowflake_private_key})"
    snowflake_db_name = "${tostring(var.snowflake_db_name})"
    enable_weather_station = "${tostring(var.enable_weather_station})"
    aws_primary_dns_role_arn = "${tostring(var.aws_primary_dns_role_arn})"
    is_alternate_account_domain = "${tostring(var.is_alternate_account_domain})"
    domain_host = "${tostring(var.domain_host})"
    alerting_enabled = "${tostring(var.alerting_enabled})"
    alerting_slack_enabled = "${tostring(var.alerting_slack_enabled})"
    alerting_pagerduty_enabled = "${tostring(var.alerting_pagerduty_enabled})"
    alerting_email_enabled = "${tostring(var.alerting_email_enabled})"
    alerting_slack_token = "${tostring(var.alerting_slack_token})"
    alerting_slack_channel = "${tostring(var.alerting_slack_channel})"
    alerting_pagerduty_integration_key = "${tostring(var.alerting_pagerduty_integration_key})"
    alerting_email_from = "${tostring(var.alerting_email_from})"
    alerting_email_to = "${tostring(var.alerting_email_to})"
    alerting_email_host = "${tostring(var.alerting_email_host})"
    alerting_email_username = "${tostring(var.alerting_email_username})"
    alerting_email_password = "${tostring(var.alerting_email_password})"
    eks_addon_version_guardduty = "${tostring(var.eks_addon_version_guardduty})"
    use_static_ssl_certificates = "${tostring(var.use_static_ssl_certificates})"
    ssl_static_secret_name = "${tostring(var.ssl_static_secret_name})"
  }
}
